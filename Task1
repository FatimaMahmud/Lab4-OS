#include <stdio.h>
#include <stdlib.h>
#include <pthread.h>

#define array_size 100

void *sumThreads();
pthread_mutex_t mutex1 = PTHREAD_MUTEX_INITIALIZER;
int Array[array_size];
int sumAll= 0;

void *sumThread1()
{
  for(int i = 0; i<25; i++){
	pthread_mutex_lock( &mutex1 );
   sumAll+= Array[i];
   printf("sum of thread1 is: %d\n",sumAll);
   pthread_mutex_unlock( &mutex1 );
  }
}

void *sumThread2()
{
  for(int i = 25; i<50; i++){
	pthread_mutex_lock( &mutex1 );
   sumAll+= Array[i];
   printf("sum of thread2 is: %d\n",sumAll);
   pthread_mutex_unlock( &mutex1 );
  }
}

void *sumThread3()
{
  for(int i = 50; i<75; i++){
	pthread_mutex_lock( &mutex1 );
   sumAll+= Array[i];
   printf("sum of thread3 is: %d\n",sumAll);
   pthread_mutex_unlock( &mutex1 );
  }
}

void *sumThread4()
{
  for(int i = 75; i<100; i++){
	pthread_mutex_lock( &mutex1 );
   sumAll+= Array[i];
   printf("sum of thread4 is: %d\n",sumAll);
   pthread_mutex_unlock( &mutex1 );
  }
}

main()
{
   int rc1, rc2, rc3, rc4;
   pthread_t thread1, thread2, thread3, thread4;

   if( (rc1=pthread_create( &thread1, NULL, &sumThread1, NULL)) )
   {
      printf("Thread creation failed: %d\n", rc1);
   }

   if( (rc2=pthread_create( &thread2, NULL, &sumThread2, NULL)) )
   {
      printf("Thread creation failed: %d\n", rc2);
   }
   
      if( (rc1=pthread_create( &thread3, NULL, &sumThread3, NULL)) )
   {
      printf("Thread creation failed: %d\n", rc3);
   }

   if( (rc2=pthread_create( &thread4, NULL, &sumThread4, NULL)) )
   {
      printf("Thread creation failed: %d\n", rc4);
   }


   pthread_join( thread1, NULL);
   pthread_join( thread2, NULL); 
   pthread_join( thread3, NULL);
   pthread_join( thread4, NULL); 
   printf("The Final Sum of all thread elements is %d\n",sumAll);
   exit(EXIT_SUCCESS);
}

